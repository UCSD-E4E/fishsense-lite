name: Docker Build and Release

on:
  push:
    tags:
      - '*.*.*'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    strategy:
      matrix:
        docker:
          - {image_tag: cpu, platforms: 'linux/amd64,linux/arm64', runs-on: ubuntu-24.04}
          - {image_tag: ray-aarch64-cpu, platforms: linux/arm64, runs-on: ubuntu-24.04-arm}
          - {image_tag: cuda, platforms: linux/amd64, runs-on: ubuntu-24.04}

    runs-on: ${{ matrix.docker.runs-on }}

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Docker/ENV cleanup Cleanup
        run: |
          docker image prune -a -f
          docker container prune -f
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3.4.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.7.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6.15.0
        with:
          context: .
          push: true
          build-args: |
            IMAGE=ghcr.io/ucsd-e4e/fishsense:${{ matrix.docker.image_tag }}
            VERSION=${{ steps.meta.outputs.tags }}
          tags: ${{ steps.meta.outputs.tags }}-${{ matrix.docker.image_tag }}
          platforms: ${{ matrix.docker.platforms }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true